/* ? Imported because it's used in multiple places */
@import url('./variables.css');
@import url('./footer.css');

/* ? COMPONENT SPECIFIC IMPORTS */
@import url('./navbar.css');
@import url('./buttons.css');

/* :root {
	font-size: 16px;
} */

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'Poppins', 'Inter', sans-serif;
	font-weight: 400;
}

html {
	scroll-behavior: smooth;
}

body {
	min-height: 100vh;
	position: relative;
	background-color: var(--primary-background-color, #fff);
	color: var(--primary-font-color, #000);
	/* overflow-x: hidden; */
}

.hero {
	width: 100%;
	height: 85vh;
	min-height: 45rem;
	position: relative;
	padding-top: 4rem;
}

.hero > .hero-image-container {
	position: absolute;
	inset: 0;
	background-image: url('../images/hero-image.jpg');
	background-size: cover;
	background-position: center;
	width: 100%;
	height: 100%;
	filter: contrast(0.75) brightness(1.25);
}

.hero > .hero-text-container {
	position: absolute;
	inset: 0;
	display: flex;
	flex-direction: column;
	justify-content: center;
	/* align-items: center; */
	width: 100%;
	height: 100%;
	padding: 2rem;
	max-width: 50%;
	gap: 1rem;
}

.hero > .hero-text-container > img {
	width: 10rem;
}

.hero > .hero-text-container > h1 {
	font-size: 3.5rem;
	font-weight: 600;
	line-height: 1.1;
	text-wrap: balance;
}

.hero > .hero-text-container > p {
	font-weight: 500;
	font-size: 1.15rem;
}

li:has(> a) {
	list-style-type: none;
}

li > a {
	text-decoration: none;
}

li > a:hover {
	text-decoration: underline;
}

.hero-text-container > .join-us-btn {
	margin-top: 1rem;
}

.model-container {
	padding: 2.5rem;
	display: flex;
	gap: 4rem;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.model {
	width: 100%;
	min-height: 30rem;
	max-width: 80rem;
	border-radius: 1rem;
	border: 1px solid #000;
	/* padding: 2rem 1rem; */
	/* box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.25);
	-webkit-box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.25);
	-moz-box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.25); */
}

.input-container {
	display: flex;
	flex-direction: column;
	margin-bottom: 1rem;
}

.input-group-container {
	display: grid;
	grid-auto-flow: column;
	gap: 1rem;
}

.input-container > label {
	font-weight: 500;
	margin-bottom: 0.5rem;
}

.input-container > input {
	padding: 0.75rem 1rem;
	border-radius: 0.5rem;
	border: 1px solid #000;
	background-color: var(--primary-background-color);
	backdrop-filter: blur(0.75);
}

.input-container > .error-message {
	color: red;
	margin-top: 0.25rem;
	font-size: 0.75rem;
}

input:has(+ .error-message:not(:empty)) {
	border: 2px solid red;
}
